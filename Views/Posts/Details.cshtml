@model LevelEditorWebApp.Models.Post

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Post</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Body)
        </dd>
        <dt class = "col-sm-2">
            Last Updated At
            <!--Html.DisplayNameFor(model => model.CreatedAt)-->
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author)
        </dd>
        <dd>
        <dt class = "col-sm-2">
           <a asp-action="Download" asp-route-id="@Model?.PostId">Download</a>
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ZipFileName)
        </dd>
    </dl>
</div>
<div>
    @if (Context.User.Identity.Name is not null && Context.User.Identity.Name.Equals(Model.Author)) {
        @Html.ActionLink("Edit", "Edit", new { id = Model.PostId }); @: |
        @Html.ActionLink("Delete", "Delete", new { id = Model.PostId }); @: |
    }
    <a asp-action="Index"> Back to List</a>
</div>

<div class="mt-5 mb-5">
    <form class="form-floating" asp-action="AddComment">
        <input type="hidden" name="PostId" value="@Model.PostId" />
        <textarea class="form-control" required placeholder="Leave a comment here" 
                  id="floatingTextarea" style="width:50rem; height: 7rem" name="Content"></textarea>
        <label for="floatingTextarea">Leave a comment here</label>
        <div class="form-group mt-1">
                <!--<input type="submit" value="Comment" class="btn btn-primary" />-->
                <button class="btn btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-send-fill" viewBox="0 0 16 16">
                        <path d="M15.964.686a.5.5 0 0 0-.65-.65L.767 5.855H.766l-.452.18a.5.5 0 0 0-.082.887l.41.26.001.002 4.995 3.178 3.178 4.995.002.002.26.41a.5.5 0 0 0 .886-.083l6-15Zm-1.833 1.89L6.637 10.07l-.215-.338a.5.5 0 0 0-.154-.154l-.338-.215 7.494-7.494 1.178-.471-.47 1.178Z"/>
                    </svg>
                    Post
                </button>
        </div>
    </form>
</div>

<div class="mt-3">
<h4>Comments</h4>
    <hr />
    @if (ViewData["Comments"] == null || (ViewData["Comments"] as List<Comment>).Count == 0)
    {
        <p>There are no comments yet.</p>
    }
    else {
        @using LevelEditorWebApp.Classes;

        @foreach (var comment in ViewData["Comments"] as List<Comment>) {
                    <div class="card" style="width:50rem;">
                    <div class="card-body">
                        <h5 class="card-title">@comment.Username</h5>
                        <p class="card-text">@comment.Content</p>
                        <p class="card-text"><small class="text-muted">@comment.CreatedAt</small></p>
                    </div>
                </div>
        }
    }
</div>